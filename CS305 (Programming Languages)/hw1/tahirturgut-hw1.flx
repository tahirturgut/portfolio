  int lineNo = 1;
%% 
\n lineNo++;
\t
\s

\"Get\" printf("%d tGET\n", lineNo);
\"Set\" printf("%d tSET\n", lineNo);
\"Function\" printf("%d tFUNCTION\n", lineNo);
\"Print\" printf("%d tPRINT\n", lineNo);
\"For\" printf("%d tFOR\n", lineNo);
\"If\" printf("%d tIF\n", lineNo);
\"Return\" printf("%d tRETURN\n", lineNo);

, printf("%d tCOMMA\n", lineNo);
\"==\" printf("%d tEQUALITY\n", lineNo);
\"\+\" printf("%d tPLUS\n", lineNo);
\"-\" printf("%d tMINUS\n", lineNo);
\"\*\" printf("%d tMUL\n", lineNo);
\"\/\" printf("%d tDIV\n", lineNo);
\"\+\+\" printf("%d tINC\n", lineNo);
\"--\" printf("%d tDEC\n", lineNo);
"[" printf("%d tLBRAC\n", lineNo);
"]" printf("%d tRBRAC\n", lineNo);
\">\" printf("%d tGT\n", lineNo);
\"<\" printf("%d tLT\n", lineNo);
\">=\" printf("%d tGEQ\n", lineNo);
\"<=\" printf("%d tLEQ\n", lineNo);

\"[a-zA-Z_][a-zA-Z0-9_]*\" {
	printf("%d tIDENT (", lineNo);
	int i = 0;
        while (yytext[i+1] != '\"') {
        	printf("%c", yytext[i+1]);
		i++;
        }
	printf(")\n");
}

[-]?([0-9]+[.])?[0-9]+ {
	printf("%d tNUM", lineNo);
	int size = yyleng;
	char* value = malloc(sizeof(char) * (size+1));
	int i = 0, j = 0;
	int thereIsNum = 0;
	if (yytext[0] == '-') {
		i++;
		j++;
		value[0] = '-';
	}
	while (size > 0 && yytext[i] != '.') {
		if (yytext[i] != '0') {
			value[j] = yytext[i];
			j++;
			thereIsNum = 1;
		}
		else if (yytext[i] == '0' && thereIsNum == 1) {
			value[j] = yytext[i];
			j++;
		}
		i++;
		size--;
	}
	if (j == 0) {
		value[j] = '0';
		j++;
	}
	else if (j == 1 && value[0] == '-') {
		value[j] = '0';
		j++;
	}
	if (yytext[i] == '.') {
		value[j] = '.';
		j++;
		i++;
		int reverse = yyleng-1;
		while (reverse > i) {
			if (yytext[reverse] != '0')
				break;
			reverse--;
		}
		if (reverse+1 == i)
			value[j] = '0';
		else {
			while (i <= reverse) {
				value[j] = yytext[i];
				j++;
				i++;
			}
		}
	}
	printf(" (%s) (%s)\n", yytext, value);
}

\'[^\']*\' {
	printf("%d tSTRING (", lineNo);
	int i = 0;
	while (yytext[i+1] != '\'') {
		if (yytext[i+1] == '\n')
			lineNo++;
		printf("%c", yytext[i+1]);
		i++;
	}
	printf(")\n");
}

.

%%
int main() 
{
  yylex();
  return(0);
}
